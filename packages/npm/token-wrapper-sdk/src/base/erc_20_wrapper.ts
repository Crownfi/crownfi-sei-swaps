/* eslint-disable */
/**
 * This file was automatically generated by crownfi-sei-sdk-autogen.
 * DO NOT MODIFY IT BY HAND.
 * The Rust definition of the associated structs is the source of truth!!
 */
import {Addr, Binary, ERC20WrapperExecMsg, Empty, EmptyQuery, Uint128} from "./types.js";
import {Coin} from "@cosmjs/amino";
import {ExecuteInstruction, WasmExtension} from "@cosmjs/cosmwasm-stargate";
import {QueryClient} from "@cosmjs/stargate";
import {ContractBase} from "@crownfi/sei-utils";
export class Erc20WrapperContract<Q extends QueryClient & WasmExtension> extends ContractBase<Q> {
	queryEmpty(): Promise<Empty> {
		const msg = {"empty": {}} satisfies EmptyQuery;
		return this.query(msg);
	}
	buildWrapIx(args: {
		"amount": Uint128,
		"evm_sender": Binary,
		"recipient"?: Addr | null,
		"token_addr": string
	}, funds?: Coin[]): ExecuteInstruction {
		const msg = {"wrap": args} satisfies ERC20WrapperExecMsg;
		return this.executeIx(msg, funds);
	}
	buildUnwrapIx(args: {
		"evm_recipient": Binary
	}, funds?: Coin[]): ExecuteInstruction {
		const msg = {"unwrap": args} satisfies ERC20WrapperExecMsg;
		return this.executeIx(msg, funds);
	}
}
