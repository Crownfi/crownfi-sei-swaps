// auto-generated by C.E.W.T.
// DO NOT EDIT BY HAND!!
export class NavbarComponentRefs {
	#element: HTMLElement | ShadowRoot;
	constructor(element: HTMLElement | ShadowRoot) {
		this.#element = element;
	}
	#walletButton?: HTMLButtonElement;
	get walletButton() {
		if (this.#walletButton === undefined) {
			this.#walletButton = this.#element.querySelector("[cewt-ref=\"wallet-button\"]:not(:scope [is] *)")!;
		}
		return this.#walletButton;
	}
}
let _templateNavbarComponent: HTMLTemplateElement | null = null;
function getNavbarComponentTemplate(): HTMLTemplateElement {
	if (_templateNavbarComponent == null) {
		 _templateNavbarComponent = document.createElement("template")
		 _templateNavbarComponent.innerHTML = "\n  <a href=\"\">\n    <img class=\"main-navbar-logo\">\n  </a>\n\n  <div class=\"actions-wrapper\">\n    <div class=\"actions\">\n      <button class=\"fantasy-ornamental danger\" is=\"wallet-disconnect\" aria-label=\"Disconnect Wallet\">\n        <span class=\"cicon cicon-size-medium cicon-logout cicon-gradient danger\"></span>\n      </button>\n\n      <button class=\"fantasy-ornamental\" is=\"wallet-options\" cewt-ref=\"wallet-button\"></button>\n    </div>\n  </div>\n";
	}
	return _templateNavbarComponent;
}
export class NavbarComponentAutogen extends HTMLDivElement {
	readonly refs: NavbarComponentRefs;
	constructor() {
		super();
		if (this.childElementCount == 0) {
			this.appendChild(
				getNavbarComponentTemplate()
					.content
					.cloneNode(true)
			);
		}
		this.setAttribute("is", "navbar-component"); // allow for easy query selecting
		this.refs = new NavbarComponentRefs(this);
	}
	connectedCallback() {
		// To be overridden by child class
	}
	disconnectedCallback() {
		// To be overridden by child class
	}
	adoptedCallback() {
		// To be overridden by child class
	}
	public static registerElement() {
		customElements.define("navbar-component", this, { extends: "div"});
	}
}
