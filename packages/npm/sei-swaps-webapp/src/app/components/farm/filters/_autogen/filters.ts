// auto-generated by C.E.W.T.
// DO NOT EDIT BY HAND!!
export class FarmFiltersComponentRefs {
	#element: HTMLElement | ShadowRoot;
	constructor(element: HTMLElement | ShadowRoot) {
		this.#element = element;
	}
	#myPools?: HTMLInputElement;
	get myPools() {
		if (this.#myPools === undefined) {
			this.#myPools = this.#element.querySelector("[cewt-ref=\"my-pools\"]:not(:scope [is] *)")!;
		}
		return this.#myPools;
	}
	#crownfiEndorsed?: HTMLInputElement;
	get crownfiEndorsed() {
		if (this.#crownfiEndorsed === undefined) {
			this.#crownfiEndorsed = this.#element.querySelector("[cewt-ref=\"crownfi-endorsed\"]:not(:scope [is] *)")!;
		}
		return this.#crownfiEndorsed;
	}
}
let _templateFarmFiltersComponent: HTMLTemplateElement | null = null;
function getFarmFiltersComponentTemplate(): HTMLTemplateElement {
	if (_templateFarmFiltersComponent == null) {
		 _templateFarmFiltersComponent = document.createElement("template")
		 _templateFarmFiltersComponent.innerHTML = "\n  Filters\n  <span class=\"cicon cicon-fantasy-controls cicon-size-small primary cicon-gradient\"></span>\n  <dropdown-menu click-trigger=\"primary\" linked-elements=\"button:has(#this)\" open-position=\"element-bottom-rightward\">\n    <dropdown-menu-item>\n      <span>My Pools</span>\n      <input type=\"checkbox\" name=\"filters\" cewt-ref=\"my-pools\">\n    </dropdown-menu-item>\n\n    <dropdown-menu-item disabled=\"\">\n      <span>Crownfi Endorsed</span>\n      <input type=\"checkbox\" name=\"filters\" cewt-ref=\"crownfi-endorsed\">\n    </dropdown-menu-item>\n</dropdown-menu>";
	}
	return _templateFarmFiltersComponent;
}
export class FarmFiltersComponentAutogen extends HTMLButtonElement {
	readonly refs: FarmFiltersComponentRefs;
	constructor() {
		super();
		if (this.childElementCount == 0) {
			this.appendChild(
				getFarmFiltersComponentTemplate()
					.content
					.cloneNode(true)
			);
		}
		this.setAttribute("is", "farm-filters-component"); // allow for easy query selecting
		this.refs = new FarmFiltersComponentRefs(this);
	}
	connectedCallback() {
		// To be overridden by child class
	}
	disconnectedCallback() {
		// To be overridden by child class
	}
	adoptedCallback() {
		// To be overridden by child class
	}
	public static registerElement() {
		customElements.define("farm-filters-component", this, { extends: "button"});
	}
}
