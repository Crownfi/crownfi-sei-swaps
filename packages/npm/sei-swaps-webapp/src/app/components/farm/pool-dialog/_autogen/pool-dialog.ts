// auto-generated by C.E.W.T.
// DO NOT EDIT BY HAND!!
import { TokenDisplayElement } from "@crownfi/sei-webui-utils";
export class PoolDialogComponentRefs {
	#element: HTMLElement | ShadowRoot;
	constructor(element: HTMLElement | ShadowRoot) {
		this.#element = element;
	}
	#closeButton?: HTMLButtonElement;
	get closeButton() {
		if (this.#closeButton === undefined) {
			this.#closeButton = this.#element.querySelector("[cewt-ref=\"close-button\"]:not(:scope [is] *)")!;
		}
		return this.#closeButton;
	}
	#exchangeRateFrom?: TokenDisplayElement;
	get exchangeRateFrom() {
		if (this.#exchangeRateFrom === undefined) {
			this.#exchangeRateFrom = this.#element.querySelector("[cewt-ref=\"exchangeRateFrom\"]:not(:scope [is] *)")!;
		}
		return this.#exchangeRateFrom;
	}
	#exchangeRateTo?: TokenDisplayElement;
	get exchangeRateTo() {
		if (this.#exchangeRateTo === undefined) {
			this.#exchangeRateTo = this.#element.querySelector("[cewt-ref=\"exchangeRateTo\"]:not(:scope [is] *)")!;
		}
		return this.#exchangeRateTo;
	}
	#totalDepositsFrom?: TokenDisplayElement;
	get totalDepositsFrom() {
		if (this.#totalDepositsFrom === undefined) {
			this.#totalDepositsFrom = this.#element.querySelector("[cewt-ref=\"totalDepositsFrom\"]:not(:scope [is] *)")!;
		}
		return this.#totalDepositsFrom;
	}
	#totalDepositsTo?: TokenDisplayElement;
	get totalDepositsTo() {
		if (this.#totalDepositsTo === undefined) {
			this.#totalDepositsTo = this.#element.querySelector("[cewt-ref=\"totalDepositsTo\"]:not(:scope [is] *)")!;
		}
		return this.#totalDepositsTo;
	}
}
let _templatePoolDialogComponent: HTMLTemplateElement | null = null;
function getPoolDialogComponentTemplate(): HTMLTemplateElement {
	if (_templatePoolDialogComponent == null) {
		 _templatePoolDialogComponent = document.createElement("template")
		 _templatePoolDialogComponent.innerHTML = "\n  <h1>\n    <div class=\"row align-items-center justify-content-between\">\n      Pool Details\n\n      <button class=\"button close-button\" cewt-ref=\"close-button\">\n        <span class=\"cicon cicon-close primary cicon-small cicon-gradient\"></span>\n      </button>\n    </div>\n  </h1>\n\n  <div class=\"container\">\n    <div class=\"col\">\n      <span class=\"label\">Pools</span>\n      <div class=\"row gap-1\">\n        <div class=\"row gap-1 align-items-center badge\">\n          <span>SEI</span>\n          <img is=\"token-icon\" denom=\"usei\">\n          <span>SEI</span>\n        </div>\n\n        <div class=\"row gap-1 align-items-center badge\">\n          <span>ATOM</span>\n          <img is=\"token-icon\" denom=\"uatom\">\n          <span>ATOM</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col mt-2\">\n      <span class=\"label\">Exchange Rate</span>\n      <div class=\"row align-items-center gap-2 badge\">\n        <span is=\"token-display\" denom=\"usei\" amount=\"1000000000\" cewt-ref=\"exchangeRateFrom\"></span>\n        <span class=\"equals\">=</span>\n        <span is=\"token-display\" denom=\"uatom\" amount=\"1000000000\" cewt-ref=\"exchangeRateTo\"></span>\n      </div>\n    </div>\n\n    <div class=\"col mt-2\">\n      <span class=\"label\">Total Deposits</span>\n      <div class=\"row align-items-center gap-1\">\n        <span class=\"badge\" is=\"token-display\" denom=\"usei\" amount=\"1000000000\" cewt-ref=\"totalDepositsFrom\"></span>\n        <span class=\"badge\" is=\"token-display\" denom=\"uatom\" amount=\"1000000000\" cewt-ref=\"totalDepositsTo\"></span>\n      </div>\n    </div>\n\n    <div class=\"col mt-2\">\n      <span class=\"label\">Pool Shares</span>\n      <span>0</span>\n    </div>\n\n    <div class=\"col mt-2\">\n      <span class=\"label\">Share Values</span>\n      <div class=\"row align-items-center gap-1\">\n        <span class=\"badge\" is=\"token-display\" denom=\"usei\" amount=\"1000000\"></span>\n        <span class=\"badge\" is=\"token-display\" denom=\"uatom\" amount=\"1000000\"></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row align-items-center justify-content-center gap-2\">\n      <label class=\"button\">\n        Deposit\n        <input type=\"radio\" name=\"operation\" value=\"deposit\">\n      </label>\n\n      <label class=\"button\">\n        Withdraw\n        <input type=\"radio\" name=\"operation\" value=\"withdraw\">\n      </label>\n    </div>\n  </div>\n";
	}
	return _templatePoolDialogComponent;
}
export class PoolDialogComponentAutogen extends HTMLDialogElement {
	readonly refs: PoolDialogComponentRefs;
	constructor() {
		super();
		if (this.childElementCount == 0) {
			this.appendChild(
				getPoolDialogComponentTemplate()
					.content
					.cloneNode(true)
			);
		}
		this.setAttribute("is", "pool-dialog-component"); // allow for easy query selecting
		this.refs = new PoolDialogComponentRefs(this);
	}
	connectedCallback() {
		// To be overridden by child class
	}
	disconnectedCallback() {
		// To be overridden by child class
	}
	adoptedCallback() {
		// To be overridden by child class
	}
	public static registerElement() {
		customElements.define("pool-dialog-component", this, { extends: "dialog"});
	}
}
