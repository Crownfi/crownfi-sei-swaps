// auto-generated by C.E.W.T.
// DO NOT EDIT BY HAND!!
export class WithdrawFormComponentRefs {
	#element: HTMLElement | ShadowRoot;
	constructor(element: HTMLElement | ShadowRoot) {
		this.#element = element;
	}
	#operationAmount?: HTMLInputElement;
	get operationAmount() {
		if (this.#operationAmount === undefined) {
			this.#operationAmount = this.#element.querySelector("[cewt-ref=\"operationAmount\"]:not(:scope [is] *)")!;
		}
		return this.#operationAmount;
	}
	#currentValue?: HTMLSpanElement;
	get currentValue() {
		if (this.#currentValue === undefined) {
			this.#currentValue = this.#element.querySelector("[cewt-ref=\"currentValue\"]:not(:scope [is] *)")!;
		}
		return this.#currentValue;
	}
	#receiveValue?: HTMLSpanElement;
	get receiveValue() {
		if (this.#receiveValue === undefined) {
			this.#receiveValue = this.#element.querySelector("[cewt-ref=\"receiveValue\"]:not(:scope [is] *)")!;
		}
		return this.#receiveValue;
	}
	#submitButton?: HTMLButtonElement;
	get submitButton() {
		if (this.#submitButton === undefined) {
			this.#submitButton = this.#element.querySelector("[cewt-ref=\"submitButton\"]:not(:scope [is] *)")!;
		}
		return this.#submitButton;
	}
}
let _templateWithdrawFormComponent: HTMLTemplateElement | null = null;
function getWithdrawFormComponentTemplate(): HTMLTemplateElement {
	if (_templateWithdrawFormComponent == null) {
		 _templateWithdrawFormComponent = document.createElement("template")
		 _templateWithdrawFormComponent.innerHTML = "\n  <div class=\"col text-center\">\n    <span class=\"label\">Shares</span>\n\n    <input type=\"text\" cewt-ref=\"operationAmount\" value=\"0\" required=\"\">\n\n    <div class=\"row justify-content-between mb-1\">\n      <div>\n        <span>Current: </span>\n        <span cewt-ref=\"currentValue\">0</span>\n      </div>\n      \n      <div>\n        <span>Receive:</span>\n        <span cewt-ref=\"receiveValue\">0 + 0</span>\n      </div>\n    </div>\n\n    <div class=\"row justify-content-end\">\n      <button class=\"small w-max-content\" cewt-ref=\"submitButton\" disabled=\"\">\n        Finish\n      </button>\n    </div>\n  </div>\n";
	}
	return _templateWithdrawFormComponent;
}
export class WithdrawFormComponentAutogen extends HTMLFormElement {
	readonly refs: WithdrawFormComponentRefs;
	constructor() {
		super();
		if (this.childElementCount == 0) {
			this.appendChild(
				getWithdrawFormComponentTemplate()
					.content
					.cloneNode(true)
			);
		}
		this.setAttribute("is", "withdraw-form-component"); // allow for easy query selecting
		this.refs = new WithdrawFormComponentRefs(this);
	}
	connectedCallback() {
		// To be overridden by child class
	}
	disconnectedCallback() {
		// To be overridden by child class
	}
	adoptedCallback() {
		// To be overridden by child class
	}
	public static registerElement() {
		customElements.define("withdraw-form-component", this, { extends: "form"});
	}
}
