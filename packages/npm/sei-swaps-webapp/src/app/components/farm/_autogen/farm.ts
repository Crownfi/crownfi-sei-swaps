// auto-generated by C.E.W.T.
// DO NOT EDIT BY HAND!!
export class FarmComponentRefs {
	#element: HTMLElement | ShadowRoot;
	constructor(element: HTMLElement | ShadowRoot) {
		this.#element = element;
	}
	#poolsList?: HTMLTableSectionElement;
	get poolsList() {
		if (this.#poolsList === undefined) {
			this.#poolsList = this.#element.querySelector("[cewt-ref=\"pools-list\"]:not(:scope [is] *)")!;
		}
		return this.#poolsList;
	}
}
let _templateFarmComponent: HTMLTemplateElement | null = null;
function getFarmComponentTemplate(): HTMLTemplateElement {
	if (_templateFarmComponent == null) {
		 _templateFarmComponent = document.createElement("template")
		 _templateFarmComponent.innerHTML = "\n  <table>\n    <thead>\n      <tr>\n        <th class=\"overlapping-icons\">\n          <i class=\"cicon cicon-size-xsmall cicon-fantasy-crown primary\"></i>\n          <i class=\"cicon cicon-size-xsmall cicon-fantasy-crown primary\"></i>\n        </th>\n\n        <th>\n          Pools\n        </th>\n\n        <th>\n          Exchange Rate\n        </th>\n\n        <th>\n          Total Deposits\n        </th>\n\n        <th>\n          Fee Rate\n        </th>\n\n        <th>\n          APY\n        </th>\n\n        <th></th>\n      </tr>\n    </thead>\n\n    <tbody cewt-ref=\"pools-list\">\n      \n    </tbody>\n  </table>\n";
	}
	return _templateFarmComponent;
}
export class FarmComponentAutogen extends HTMLDivElement {
	readonly refs: FarmComponentRefs;
	constructor() {
		super();
		if (this.childElementCount == 0) {
			this.appendChild(
				getFarmComponentTemplate()
					.content
					.cloneNode(true)
			);
		}
		this.setAttribute("is", "farm-component"); // allow for easy query selecting
		this.refs = new FarmComponentRefs(this);
	}
	connectedCallback() {
		// To be overridden by child class
	}
	disconnectedCallback() {
		// To be overridden by child class
	}
	adoptedCallback() {
		// To be overridden by child class
	}
	public static registerElement() {
		customElements.define("farm-component", this, { extends: "div"});
	}
}
